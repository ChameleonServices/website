@inject HttpClient Client
@inject IJSRuntime JS
@inject NavigationManager NavManager

@if (ImageSources.Count > 0)
{
    <MudCarousel Class="mud-width-full" id="chameleon-banner" Style="height: 100%; width: 100%" ShowArrows="false" ShowBullets="false" AutoCycle="true" TData="object">
        @foreach (var image in ImageSources)
        {
            <MudCarouselItem Transition="transition" Color="@Color.Primary">
                <div class="banner-slide" style="background-image: url('@image');"></div>
            </MudCarouselItem>
        }
    </MudCarousel>
}

<div id="banner-preload">
    @foreach (var img in ImageSources)
    {
        <img src="@img" />
    }
</div>

@code {
    public ICollection<Uri> ImageSources { get; set; }
    private Transition transition = Transition.Fade;

    public ChameleonBanner()
    {
        ImageSources = Array.Empty<Uri>();
    }

    protected override async Task OnInitializedAsync()
    {
        var data = await Client.GetFromJsonAsync<ICollection<string>>("banner.json") ?? Array.Empty<string>();
        LoadImages(data);
    }

    void LoadImages(ICollection<string> relativeUrls)
    {

        ImageSources = relativeUrls.Select(x => new Uri($"{NavManager.BaseUri}/media/banner/{x}")).ToArray();
        StateHasChanged();
    }
}
